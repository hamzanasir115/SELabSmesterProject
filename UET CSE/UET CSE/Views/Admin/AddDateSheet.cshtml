@model UET_CSE.Models.DateSheetViewModel

@{
    ViewBag.Title = "AddDateSheet";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<h2>AddDateSheet</h2>

@using (Html.BeginForm("AddDateSheet", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
  @* <section class="event-form" style="background-color:aliceblue">
        <div class="container" style="background-color:aliceblue">
            <br><br><h2>@ViewBag.Title</h2><br><br>
            <form class="form-horizontal" action="/action_page.php">

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Session, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Session, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Section, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Day, new List<SelectListItem>
                            { new SelectListItem{Text="Monday", Value="Monday", Selected =true},
                              new SelectListItem{Text="Tuesday", Value="Tuesday" },
                               new SelectListItem{Text="Wednesday", Value="Wednesday"},
                               new SelectListItem{Text="Thursday", Value="Thursday"},
                                new SelectListItem {Text="Friday", Value="Friday" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Program, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Program, new List<SelectListItem>
                            { new SelectListItem{Text="Computer Scienece", Value="Computer Scienece", Selected =true},
                              new SelectListItem{Text="Computer Engineering", Value="Computer Engineering" }
                                })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Subject, new List<SelectListItem>
                            { new SelectListItem{Text="Artificial Intelligence", Value="Artificial Intelligence", Selected =true},
                              new SelectListItem{Text="Software Engineering", Value="Software Engineering" },
                               new SelectListItem{Text="Analysis of Algorithm", Value="Analysis of Algorithm"},
                               new SelectListItem{Text="Theory of Automata", Value="Theory of Automata"},
                                new SelectListItem {Text="Communication Skills", Value="Communication Skills" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SupritendentName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SupritendentName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SupritendentName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Day, new List<SelectListItem>
                            { new SelectListItem{Text="N6", Value="N6", Selected =true},
                              new SelectListItem{Text="N7", Value="N7" },
                               new SelectListItem{Text="N8", Value="N8"},
                               new SelectListItem{Text="N9", Value="N9"},
                                new SelectListItem {Text="N10", Value="N10" } })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Add" class="btn btn-default" />
                        </div>
                    </div>
                </div>

            </form>
        </div><br><br><br>
    </section>*@

    <div class="form-horizontal">
        <h4>DateSheetViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Session, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Session, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Section, new List<SelectListItem>
                            { new SelectListItem{Text="A", Value="A", Selected =true},
                              new SelectListItem{Text="B", Value="B" },
                               new SelectListItem{Text="C", Value="C"},
                               new SelectListItem{Text="D", Value="D"} })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Day, new List<SelectListItem>
                            { new SelectListItem{Text="Monday", Value="Monday", Selected =true},
                              new SelectListItem{Text="Tuesday", Value="Tuesday" },
                               new SelectListItem{Text="Wednesday", Value="Wednesday"},
                               new SelectListItem{Text="Thursday", Value="Thursday"},
                                new SelectListItem {Text="Friday", Value="Friday" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Program, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(model => model.Program, new List<SelectListItem>
                            { new SelectListItem{Text="Computer Scienece", Value="Computer Scienece", Selected =true},
                              new SelectListItem{Text="Computer Engineering", Value="Computer Engineering" }
                                })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(model => model.Subject, new List<SelectListItem>
                            { new SelectListItem{Text="Artificial Intelligence", Value="Artificial Intelligence", Selected =true},
                              new SelectListItem{Text="Software Engineering", Value="Software Engineering" },
                               new SelectListItem{Text="Analysis of Algorithm", Value="Analysis of Algorithm"},
                               new SelectListItem{Text="Theory of Automata", Value="Theory of Automata"},
                                new SelectListItem {Text="Communication Skills", Value="Communication Skills" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupritendentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupritendentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupritendentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hall, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Hall, new List<SelectListItem>
                            { new SelectListItem{Text="N6", Value="N6", Selected =true},
                              new SelectListItem{Text="N7", Value="N7" },
                               new SelectListItem{Text="N8", Value="N8"},
                               new SelectListItem{Text="N9", Value="N9"},
                                new SelectListItem {Text="N10", Value="N10" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
